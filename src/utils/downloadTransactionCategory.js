import axios from 'axios';
import { Readable } from 'stream';
import csvParser from 'csv-parser';

import { env } from './env.js';

export const downloadCSV = async () => {
  try {
    const url = env('CSV_URL');
    console.log('üì• –ó–∞–≥—Ä—É–∂–∞–µ–º CSV —Å URL:', url);

    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º CSV-—Ñ–∞–π–ª –∫–∞–∫ Buffer
    const response = await axios.get(url, { responseType: 'arraybuffer' });
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Buffer –≤ –ø–æ—Ç–æ–∫ (stream)
    const stream = Readable.from(response.data.toString('utf-8'));
    // –ü–∞—Ä—Å–∏–º CSV –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤
    const categories = [];

    await new Promise((resolve, reject) => {
      stream
        .pipe(csvParser())
        .on('data', (row) => categories.push(row))
        .on('end', resolve)
        .on('error', reject);
    });

    console.log('‚úÖ CSV-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω!');
    return categories;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ CSV:', error.message);
  }
};
